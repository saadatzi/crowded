version: "3.7"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    restart: always
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - crowded-docker-network
    volumes:
      #      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      #      - ./elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12
      - elastic:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.2
    restart: always
    ports:
      - "5601:5601"
    networks:
      - crowded-docker-network
  #    volumes:
  #      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
  redis:
    image: "redis:alpine"
    restart: always
    command: redis-server --requirepass d2f3db53e64ffddcfdf5c0f2cd36f95517356e9b
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - crowded-docker-network
  mongodb:
    image: mongo
    restart: always
#    environment:
#      AUTH: "yes"
      #      - MONGODB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
#      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
#      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
#      MONGO_INITDB_DATABASE: $MONGO_DATABASE
    #      - MONGO_ADMIN_USERNAME=${MONGO_ADMIN_USERNAME}
    #      - MONGO_ADMIN_PASSWORD=${MONGO_ADMIN_PASSWORD}
    #      - MONGO_DBUSER=${MONGO_DBUSER}
    #      - MONGO_DBUSER_PASSWORD=${MONGO_DBUSER_PASSWORD}
#      MONGO_DATABASE: ${MONGO_DATABASE}
    #      MONGODB_ROOT_PASSWORD
    #      MONGODB_ADMIN_USER
    #      MONGODB_ADMIN_PASS
    #      MONGODB_USER
    #      MONGODB_PASS
    #    env_file:
    #      - $PWD/.env
    ports:
      - 27017:27017
    volumes:
      - $PWD/mongo-entrypoint/startup_script.sh:/docker-entrypoint-initdb.d/startup_script.sh
      - mongoData:/data/db

    networks:
      - crowded-docker-network
#    command:
#      - mongod --auth
#      - /docker-entrypoint-initdb.d/startup_script.sh
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - crowded-docker-network

networks:
  crowded-docker-network:
    external: true
volumes:
  elastic:
    driver: local
  mongoData:
    driver: local
